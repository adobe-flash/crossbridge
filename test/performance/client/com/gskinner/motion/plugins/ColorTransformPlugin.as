package com.gskinner.motion.plugins {		import com.gskinner.motion.GTween;	import flash.geom.ColorTransform;		public class ColorTransformPlugin {				public static var enabled:Boolean=true;				protected static var installed:Boolean = false;		protected static var tweenProperties:Array = ["redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","tint"];				public static function install():void {			if (installed) { return; }			installed = true;			for each (var n:String in tweenProperties) {				GTween.installPlugin(ColorTransformPlugin,n,true);			}		}				public static function init(tween:GTween, name:String, value:Number):Number {			if (name == "tint") {				// try to calculate initial tint:				var ct:ColorTransform = tween.target.transform.colorTransform;				var a:uint = Math.min(1,1-ct.redMultiplier);				var r:uint = Math.min(0xFF,ct.redOffset*a);				var g:uint = Math.min(0xFF,ct.greenOffset*a);				var b:uint = Math.min(0xFF,ct.blueOffset*a);				var tint:uint = a*0xFF<<24 | r<<16 | g<<8 | b;				return tint;			} else {				return tween.target.transform.colorTransform[name];			}		}				public static function tween(tween:GTween, name:String, value:Number, initValue:Number, rangeValue:Number, ratio:Number, end:Boolean):Number {			if (!(tween.pluginData.ColorTransformEnabled || enabled)) { return value; }						var ct:ColorTransform = tween.target.transform.colorTransform;			if (name == "tint") {				var aA:uint = initValue>>24&0xFF;				var rA:uint = initValue>>16&0xFF;				var gA:uint = initValue>>8&0xFF;				var bA:uint = initValue&0xFF;				var tint:uint = initValue+rangeValue>>0;				var a:uint = aA+ratio*((tint>>24&0xFF)-aA);				var r:uint = rA+ratio*((tint>>16&0xFF)-rA);				var g:uint = gA+ratio*((tint>>8&0xFF)-gA);				var b:uint = bA+ratio*((tint&0xFF)-bA);				var mult:Number = 1-a/0xFF;				tween.target.transform.colorTransform = new ColorTransform(mult,mult,mult,ct.alphaMultiplier,r,g,b,ct.alphaOffset);			} else {				ct[name] = value;				tween.target.transform.colorTransform = ct;			}			// tell GTween not to use the default assignment behaviour:			return NaN;		}			}	}