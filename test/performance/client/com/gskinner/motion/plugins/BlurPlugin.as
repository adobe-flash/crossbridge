package com.gskinner.motion.plugins {		import com.gskinner.motion.GTween;	import flash.filters.BlurFilter;	import com.gskinner.motion.plugins.IGTweenPlugin;		public class BlurPlugin implements IGTweenPlugin {				public static var enabled:Boolean=true;				protected static var instance:BlurPlugin;				public static function install():void {			if (instance) { return; }			instance = new BlurPlugin();			GTween.installPlugin(instance,"blurX");			GTween.installPlugin(instance,"blurY");			GTween.installPlugin(instance,"blur");		}				public function init(tween:GTween, name:String, value:Number):Number {			// try to find a blur filter:			var f:Array = tween.target.filters;			for (var i:uint=0; i<f.length; i++) {				if (f[i] is BlurFilter) {					var blurF:BlurFilter = f[i];					tween.pluginData.BlurData = {index:i,retain:true}					if (name == "blur") {						return (blurF.blurX+blurF.blurY)/2;					} else {						return blurF[name];					}				}			}			return 0;		}				public function tween(tween:GTween, name:String, value:Number, initValue:Number, rangeValue:Number, ratio:Number, end:Boolean):Number {			if (!(tween.pluginData.BlurEnabled || enabled)) { return value; }						var data:Object = tween.pluginData.BlurData;			if (data == null) { data = initTarget(tween); }						var f:Array = tween.target.filters;			var blurF:BlurFilter = f[data.index] as BlurFilter;			if (blurF == null) { return value; }						if (end && value <= 1 && !data.retain) {				f.splice(data.index,1);			} else {				if (name == "blur") { blurF.blurX = blurF.blurY = value; }				else { blurF[name] = value; }			}			tween.target.filters = f;			return value;		}				protected function initTarget(tween:GTween):Object {			var f:Array = tween.target.filters;			f.push(new BlurFilter(0,0,1));			tween.target.filters = f;			return tween.pluginData.BlurData = {index:f.length-1};		}			}}