GNU gdb (GDB) 7.3
Copyright (C) 2011 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=IGNORE --target=avm2-elf".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
No symbol table is loaded.  Use the "file" command.
Breakpoint 1 (main) pending.
0xdddddddd in ?? ()

Breakpoint 1, INSTRUCTPT in main (argc=0, argv=0x200ff0) at nestedFunctions.c:36
36	    int s = 1;
Breakpoint 2 at INSTRUCTPT: file nestedFunctions.c, line 31.

Breakpoint 2, INSTRUCTPT in nestedFunction3 (a=1, i=0, sum=0) at nestedFunctions.c:31
31		printf("a=%d, i=%d, sum=%d", a, i, sum);
# show backtrace
#0  INSTRUCTPT in nestedFunction3 (a=1, i=0, sum=0) at nestedFunctions.c:31
#1  INSTRUCTPT in nestedFunction1 (a=1) at nestedFunctions.c:18
#2  INSTRUCTPT in main (argc=0, argv=0x200ff0) at nestedFunctions.c:41
#3  INSTRUCTPT in _start1 () from remote:IGNORE.elf
#4  0x00000000 in ?? ()
# show args + locals
a = 1
i = 0
sum = 0
No locals.
# go up a frame
#1  INSTRUCTPT in nestedFunction1 (a=1) at nestedFunctions.c:18
18			nestedFunction3(a, i, sum);
# show backtrace
#0  INSTRUCTPT in nestedFunction3 (a=1, i=0, sum=0) at nestedFunctions.c:31
#1  INSTRUCTPT in nestedFunction1 (a=1) at nestedFunctions.c:18
#2  INSTRUCTPT in main (argc=0, argv=0x200ff0) at nestedFunctions.c:41
#3  INSTRUCTPT in _start1 () from remote:IGNORE.elf
#4  0x00000000 in ?? ()
# show args + locals
a = 1
sum = 0
i = 0
# go down a frame
#0  INSTRUCTPT in nestedFunction3 (a=1, i=0, sum=0) at nestedFunctions.c:31
31		printf("a=%d, i=%d, sum=%d", a, i, sum);
# show backtrace
#0  INSTRUCTPT in nestedFunction3 (a=1, i=0, sum=0) at nestedFunctions.c:31
#1  INSTRUCTPT in nestedFunction1 (a=1) at nestedFunctions.c:18
#2  INSTRUCTPT in main (argc=0, argv=0x200ff0) at nestedFunctions.c:41
#3  INSTRUCTPT in _start1 () from remote:IGNORE.elf
#4  0x00000000 in ?? ()
# show args + locals
a = 1
i = 0
sum = 0
No locals.
Kill the program being debugged? (y or n) [answered Y; input not from terminal]
